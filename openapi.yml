openapi: 3.1.0
info:
  title: CompetitionEngine API
  version: '0.1.0'
  description: >
    REST API for managing tournaments, teams and participants.
servers:
  - url: https://api.server.test/v1
    description: Engine server
    variables:
      version:
        descriptions: API version
        default: v2
        enum: [v1, v2]
security:
  - UserIdHeader: []
    UserPwdHashHeader: []

tags:
  - name: Engine
    description: Interaction with CompetitionEngine

paths:
  /distribute/{tourId}:
    post:
      summary: Distribute teams for matches
      tags: [Engine]
      parameters:
        - name: tourId
          in: path
          description: ID of tour
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          description: Incorrect tour status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReasonError'

  /start_match/{matchId}:
    post:
      summary: Start match in tour between teams
      tags: [Engine]
      parameters:
        - name: matchId
          in: path
          description: ID of match
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/MatchStatusDto"
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          description: Incorrect match status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReasonError'

  /get_match_status/{matchId}:
    get:
      summary: Get current match status
      tags: [Engine]
      parameters:
        - name: matchId
          in: path
          description: ID of match
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/MatchStatusDto"
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: Match not found

  /add_points/{matchId}/{participantId}/{n}:
    post:
      summary: Add N points to the active team of the specified match
      tags: [Engine]
      parameters:
        - name: matchId
          in: path
          description: ID of match
          required: true
          schema:
            type: string
            format: uuid
        - name: participantId
          in: path
          description: ID of the winning command (team)
          required: true
          schema:
            type: string
            format: uuid
        - name: n
          in: path
          description: Number of points to add (positive integer)
          required: true
          schema:
            type: integer
            minimum: 1
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ScoreDto"
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          description: Match not active or wrong parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReasonError'

  /remove_points/{matchId}/{participantId}/{n}:
    post:
      summary: Remove N points from the active team of the specified match
      tags: [Engine]
      parameters:
        - name: matchId
          in: path
          description: ID of match
          required: true
          schema:
            type: string
            format: uuid
        - name: participantId
          in: path
          description: ID of the winning command (team)
          required: true
          schema:
            type: string
            format: uuid
        - name: n
          in: path
          description: Number of points to remove (positive integer)
          required: true
          schema:
            type: integer
            minimum: 1
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ScoreDto"
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          description: Match not active, resulting score negative, or wrong parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReasonError'

  /set_winner/{matchId}/{participantId}:
    post:
      summary: Set winner for the specified match
      tags: [Engine]
      parameters:
        - name: matchId
          in: path
          description: ID of match
          required: true
          schema:
            type: string
            format: uuid
        - name: participantId
          in: path
          description: ID of the winning command (team)
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          description: Match not finished yet, wrong team ID, or other invalid state
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReasonError'

components:
  securitySchemes:
    UserIdHeader:
      type: apiKey
      in: header
      name: X-User-UUID
      description: >
        RFC‑4122 UUID пользователя. Пример: 123e4567-e89b-12d3-a456-426614174000
      x-example: 123e4567-e89b-12d3-a456-426614174000
      x-pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$'
      x-minLength: 36

    UserPwdHashHeader:
      type: apiKey
      in: header
      name: X-User-Hash
      description: >
        bcrypt‑hash (cost=10) от пароля + соль. Пример сокращён.
      x-example: "$2b$10$7qGwYnbDOMqSdWwaZ7kz1Oppz92O1dW8r8hUWNu4DwSUjWBo9.TX2"
      x-minLength: 32
      x-maxLength: 128

  responses:
    Unauthorized:
      description: Invalid or missing authentication headers (X-User-UUID / X-User-Hash)
    Forbidden:
      description: Authenticated but lacking permissions to perform this action
    NotFound:
      description: Resource not found
  schemas:
    MatchStatusDto:
      type: object
      properties:
        startedAt:
          type: string
          format: date-time
        participant1:
          type: string
          format: uuid
        participant2:
          type: string
          format: uuid
        p1Points:
          type: integer
          format: int32
        p2Points:
          type: integer
          format: int32
        winner:
          type: string
          format: uuid
    ScoreDto:
      type: object
      properties:
        matchId:
          type: string
          format: uuid
        participantId:
          type: string
          format: uuid
        points:
          type: integer
          format: int32
    ReasonError:
      type: object
      required: [reason]
      properties:
        reason:
          type: string
    MatchStatus:
      type: object
      required: [started_at, participant1, participant2, p1_points, p2_points]
      properties:
        started_at:
          type: string
          format: date-time
        participant1:
          type: string
          format: uuid
        participant2:
          type: string
          format: uuid
        p1_points:
          type: integer
        p2_points:
          type: integer
        winner:
          type: string
          format: uuid
          nullable: true
    UUID:
      type: string
      format: uuid
      description: Universally unique identifier
